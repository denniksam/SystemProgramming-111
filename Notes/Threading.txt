Многопоточность
Проблема: (ThreadingWindow::Start1())
 попытка циклически выводить данные с задержкой приводит к тому что
 программа "висит" некоторое время, после чего все данные появляются сразу.
 До появления данных кнопка "Стоп" не нажимается.
Причина:
 все команды вывода данных работают в одном потоке (синхронно), хотя
 инструкции обновления элементов интерфейса (текста, прогресса) подаются,
 но само обновление не происходит, т.к. не закончена работа обработчика
 ButtonStart1_Click, а значит остальные обработчики не запускаются (в т.ч.
 перерисовка окна)

Решение: запуск продолжительных процессов в отдельном потоке.
 Потоки (Thread) [не путать с Stream] - системный ресурс, выполняющий
   код параллельно с другими потоками
 Процесс - системный ресурс, контейнер для потоков. В процессе может
   быть несколько потоков (как минимум один). Если завершается последний
   из потоков, то завершается и весь процесс.

Новая проблема: при попытке вывода данных возникает ислкючение
	System.InvalidOperationException: 
		'Вызывающий поток не может получить доступ к данному объекту, 
		 так как владельцем этого объекта является другой поток.'
Причина: элементы интерфейса (окна) принадлежат основному потоку и
  "не разрешают" другим потокам изменять свое состояние
Решение: необходимо делегировать внесение изменений "в окно" другому
  потоку. Механизм делегирования отличается для разных языков/систем
  WPF - this.Dispatcher.Invoke(() => { })

          Process (SystemProgramming_111)		   Процесс - один
		    /		   \						   в нем два потока
 UI Thread				new Thread( Start )		   UI-основной + созданный по кнопке
 oper()					oper()					   Операции обоих потоков 
 oper()		Exception	oper()					   выполняются параллельно 
 oper() <---------------Label.Text="..."
 oper()   поток занят, ставится в очередь
 oper()	<---------------Dispatcher.Invoke(() => { Label.Text="..." })
   Label.Text="..." - выполняется из очереди 
 oper() - возвращается к своим операциям
 oper()



--------------------------------------------------------------------
Для запуска в потоке (в C#) подходят два типа методов:
void method()
void method(object?) - с передачей параметра
Параметр может быть только один, но содержать сколько угодно полей
